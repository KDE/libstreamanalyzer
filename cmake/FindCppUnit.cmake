# - Try to find the libcppunit libraries
# Once done this will define
#
# CppUnit_FOUND - system has libcppunit
# CPPUNIT_INCLUDE_DIR - the libcppunit include directory
# CPPUNIT_LIBRARIES - libcppunit library

IF(CPPUNIT_INCLUDE_DIR AND CPPUNIT_LIBRARIES)

    # in cache already
    SET(CppUnit_FOUND TRUE)

ELSE(CPPUNIT_INCLUDE_DIR AND CPPUNIT_LIBRARIES)

    FIND_PROGRAM(CPPUNIT_CONFIG_EXECUTABLE cppunit-config PATHS
        /usr/bin
        /usr/local/bin
    )

    SET(CPPUNIT_INCLUDE_DIR)
    SET(CPPUNIT_LIBRARIES)

    IF(CPPUNIT_CONFIG_EXECUTABLE)
        EXEC_PROGRAM(${CPPUNIT_CONFIG_EXECUTABLE} ARGS --cflags RETURN_VALUE _return_VALUE OUTPUT_VARIABLE CPPUNIT_CFLAGS)
        EXEC_PROGRAM(${CPPUNIT_CONFIG_EXECUTABLE} ARGS --libs   RETURN_VALUE _return_VALUE OUTPUT_VARIABLE CPPUNIT_LIBRARIES)
        STRING(REGEX REPLACE "-I(.+)" "\\1" CPPUNIT_CFLAGS "${CPPUNIT_CFLAGS}")
    ELSE(CPPUNIT_CONFIG_EXECUTABLE)
        # in case win32 needs to find it the old way?
        FIND_PATH(CPPUNIT_CFLAGS cppunit/TestRunner.h PATHS /usr/include /usr/local/include )
        FIND_LIBRARY(CPPUNIT_LIBRARIES NAMES cppunit PATHS /usr/lib /usr/local/lib )
    ENDIF(CPPUNIT_CONFIG_EXECUTABLE)

    SET(CPPUNIT_INCLUDE_DIR ${CPPUNIT_CFLAGS} "${CPPUNIT_CFLAGS}/cppunit")

ENDIF(CPPUNIT_INCLUDE_DIR AND CPPUNIT_LIBRARIES)

# IF(CPPUNIT_INCLUDE_DIR)
#     message (STATUS "found cppunit include dir: ${CPPUNIT_INCLUDE_DIR}")
# ENDIF (CPPUNIT_INCLUDE_DIR)
# 
# IF(CPPUNIT_LIBRARIES)
#     message (STATUS "found cppunit libraries: ${CPPUNIT_LIBRARIES}")
# ENDIF (CPPUNIT_LIBRARIES)

IF(CPPUNIT_INCLUDE_DIR AND CPPUNIT_LIBRARIES)
  SET(CppUnit_FOUND TRUE)
  if(NOT CppUnit_FIND_QUIETLY)
   message(STATUS "Found cppunit: ${CPPUNIT_LIBRARIES}")
  endif(NOT CppUnit_FIND_QUIETLY)
ELSE(CPPUNIT_INCLUDE_DIR AND CPPUNIT_LIBRARIES)
  SET(CppUnit_FOUND FALSE CACHE BOOL "Not found cppunit library")
ENDIF(CPPUNIT_INCLUDE_DIR AND CPPUNIT_LIBRARIES)

MARK_AS_ADVANCED(CPPUNIT_INCLUDE_DIR CPPUNIT_LIBRARIES)
