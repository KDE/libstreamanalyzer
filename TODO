- documentation ( complete apidox )
- clean up the old tutorials (they're a little confusing at the mo)
- write new tutorials for the new analyzer types
- finish kfilemetainfo and kfile in kdelibs
- make per-analyzer unit tests
- write though unit tests for indexers
- fix strigiapplet
- implement xesam (wasabi)
- finish the ontologies
- implement a qdbm+sqlite backend
- implement an rdf backend
- add mechanism for i18n of ontology
- allow for i18n of (finite) enums? [as part of i18n of ontology]
- make sure the applet displays fine if kicker is on the top of the screen
- add support for numeric < and > in the queries
- monitor the free disk space and make sure the indexer does not fill up the drive. this might be done with Solid or a call to a monitor with dbus. best is probably to let the client tell the server how much space is left
- add support for extended headers in tar files
  see e.g. http://www.ussg.iu.edu/hypermail/linux/kernel/0506.2/0417.html
- use locate for search systemwide for filenames
- <fosterfeld_> vandenoever: i would suggest to add IndexReader::query() version based on iterators
- add the option to not refresh status automatically
- support for more archive types like http://www.kde-apps.org/content/show.php/PeaZip?content=52805

- set the lib version numbers to 0.0.0 until we stabilize the api

quick way to parse desktop files according to dfaure:
[17:57] <dfaure> vandenoever: if you want to populate strigi with the list of installed apps, I suggest KService::allServices()
[17:57] <dfaure> this will get the list of services (parts and app) out of ksycoca quite fast
[17:57] <dfaure> much faster than parsing .desktop files.

- port KFilePlugin implementations to strigi analyzers:
  http://lxr.kde.org/ident?i=KFilePlugin

- add support for IPTC, see http://nets.ii.uam.es/neptuno/iptc/
- think about supporting very large files with nested files, such as 1 gb mailbox files
- delete deprecated headers (those that currently cause #errors)
